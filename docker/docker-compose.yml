version: "3.4"

# This Compose file is expected to be used with the devnet-up.sh script.
# The volumes below mount the configs generated by the script into each
# service.

# OP-UP: This file has been modified to work with the OP-UP script. The
# main change is that some services have their dockerfile specified in
# a variable, which is set by the OP-UP CLI. This allows us to use the
# same docker-compose file for all configurations of the devnet.

volumes:
  l1_data:
  l2_data:
  op_log:

services:
  l1:
    build:
      context: .
      dockerfile: "Dockerfile.l1-${L1_CLIENT_CHOICE}"
    ports:
      - "8545:8545"
      - "8546:8546"
      - "7060:6060"
    volumes:
      - "l1_data:/db"
      - "${PWD}/../.devnet/genesis-l1.json:/genesis.json"
      - "${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt"

  l2:
    build:
      context: .
      dockerfile: "Dockerfile.l2-${L2_CLIENT_CHOICE}"
    ports:
      - "9545:8545"
      - "8060:6060"
    volumes:
      - "l2_data:/db"
      - "${PWD}/../.devnet/genesis-l2.json:/genesis.json"
      - "${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt"

  rollup-client:
    build:
      context: ../ # this is a hack to let us use all directories in the Dockerfile
      dockerfile: "./docker/Dockerfile.rollup-${ROLLUP_CLIENT_CHOICE}"
    ports:
      - "7545:8545"
      - "9003:9003"
      - "7300:7300"
      - "6060:6060"
    volumes:
      - "${PWD}/p2p-sequencer-key.txt:/config/p2p-sequencer-key.txt"
      - "${PWD}/p2p-node-key.txt:/config/p2p-node-key.txt"
      - "${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt"
      - "${PWD}/../.devnet/rollup.json:/rollup.json"
      - op_log:/op_log

  proposer:
    build:
      context: ../optimism
      dockerfile: ./op-proposer/Dockerfile
    ports:
      - "6062:6060"
      - "7302:7300"
    environment:
      OP_PROPOSER_L1_ETH_RPC: http://l1:8545
      OP_PROPOSER_ROLLUP_RPC: http://rollup-client:8545
      OP_PROPOSER_POLL_INTERVAL: 1s
      OP_PROPOSER_NUM_CONFIRMATIONS: 1
      OP_PROPOSER_MNEMONIC: test test test test test test test test test test test junk
      OP_PROPOSER_L2_OUTPUT_HD_PATH: "m/44'/60'/0'/0/1"
      OP_PROPOSER_L2OO_ADDRESS: "${L2OO_ADDRESS}"
      OP_PROPOSER_PPROF_ENABLED: "true"
      OP_PROPOSER_METRICS_ENABLED: "true"
      OP_PROPOSER_ALLOW_NON_FINALIZED: "true"

  batcher:
    build:
      context: ../optimism
      dockerfile: ./op-batcher/Dockerfile
    ports:
      - "6061:6060"
      - "7301:7300"
      - "6545:8545"
    environment:
      OP_BATCHER_L1_ETH_RPC: http://l1:8545
      OP_BATCHER_L2_ETH_RPC: http://l2:8545
      OP_BATCHER_ROLLUP_RPC: http://rollup-client:8545
      OP_BATCHER_MAX_CHANNEL_DURATION: 1
      OP_BATCHER_SUB_SAFETY_MARGIN: 4 # SWS is 15, ChannelTimeout is 40
      OP_BATCHER_POLL_INTERVAL: 1s
      OP_BATCHER_NUM_CONFIRMATIONS: 1
      OP_BATCHER_MNEMONIC: test test test test test test test test test test test junk
      OP_BATCHER_SEQUENCER_HD_PATH: "m/44'/60'/0'/0/2"
      OP_BATCHER_PPROF_ENABLED: "true"
      OP_BATCHER_METRICS_ENABLED: "true"
      OP_BATCHER_RPC_ENABLE_ADMIN: "true"

  challenger:
    build:
      context: ../
      dockerfile: "./docker/Dockerfile.challenger-${CHALLENGER_AGENT_CHOICE}"
    ports:
      - "9200:9200"
      - "5545:8545"

  artifact-server:
    depends_on:
      - l1
    image: nginx:1.25-alpine
    ports:
      - "8080:80"
    volumes:
      - "${PWD}/../.devnet/:/usr/share/nginx/html/:ro"
    security_opt:
      - "no-new-privileges:true"

  stateviz:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile.stateviz
    command:
      - stateviz
      - -addr=0.0.0.0:8080
      - -snapshot=/op_log/snapshot.log
      - -refresh=10s
    ports:
      - "9090:8080"
    volumes:
      - op_log:/op_log:ro
